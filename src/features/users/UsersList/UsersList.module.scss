@import "/src/assets/styles/mixins";
@import "/src/assets/styles/variables";

.container {
  @include gridRow(2fr 10fr 4fr 2fr, stretch, stretch);
  background-color: $greyLightColor;
  border-right: 1px solid $greyMediumColor;
  justify-self: start;
  width: 100%;
  min-width: 200px;
  max-width: 260px;
  @media screen and (max-width: 1000px) {
    @include size(100%, 40%);
    max-width: 100%;
    @include position(fixed, inherit, 0, 0);
    grid-template-areas: 'D A'
                         'C B'
                         'C B';
    @include gridLayout(stretch, stretch);
  }
  @media screen and (max-width: 1000px) and (max-height: 600px) {
    grid-template-areas: 'A B'
                         'C B'
                         'D B';
    @include gridLayout(start, stretch);
    @include size(100%, 92vh);
    max-width: 400px;
    position: static;
    padding-bottom: 50px;
  }
  @media screen and (height: 600px) {
    height: 83vh;
  }

  .sector {
    padding: 12px;
    border-bottom: 1px solid $greyMediumColor;
    border-top: 1px solid $greyMediumColor;
    @include gridRow(1fr, center, inherit);
    @media screen and (max-width: 1000px) and (max-height: 600px) {
      font-size: 1rem;
      border-bottom: none;
    }

    .itemList {
      list-style-type: none;
      max-height: 360px;
      text-align: end;

      .noMatches {
        @include font($greyDarkColor, 1rem, center);
      }
    }

    .delAria {
      @include size(100%, 100%);
      @include dashedBorderAria(50% 54%, 50px);
      justify-self: start;
      transition: background-size 0.4s, color 0.4s;
      @media screen and (max-width: 1000px) {
        height: 200px;
      }
      @media screen and (max-width: 1000px) and (max-height: 680px) {
        height: 160px;
      }
      @media screen and (max-width: 1000px) and (max-height: 500px) {
        @include dashedBorderAria(50% 70%, 30px);
        height: 100px;
        font-size: 0.8rem;
      }
      @media screen and (height: 600px) {
        @include dashedBorderAria(50% 90%, 30px);
      }
    }

    .dragOver {
      color: $redColor;
      background-size: 56px;
    }

    .dragStart {
      color: $greyDarkColor;
      background-size: 56px;
    }

    .dragLeave {
      color: $greyDarkColor;
    }

    .btn {
      @include button($activeColor2);
      @media screen and (max-width: 1000px) and (max-height: 500px) {
        font-size: 1rem;
      }
      @media screen and (max-height: 280px) {
        font-size: 0.8rem;
      }
    }
  }

  .list {
    align-items: stretch;
    @include scrollLeft();
  }

  .ariaA {
    grid-area: A;
  }

  .ariaB {
    grid-area: B;
    @media screen and (max-width: 1000px) and (max-height: 600px) {
      width: 104px;
    }
  }

  .ariaC {
    grid-area: C;
    min-width: 180px;
    @media screen and (max-width: 1000px) and (max-height: 600px) {
      min-width: 0;
      height: 100%;
    }
  }

  .ariaD {
    grid-area: D;
    @media screen and (max-width: 1000px) and (max-height: 600px) {
      min-width: 0;
      align-self: stretch;
    }
  }
}

.item {
  position: relative;
  @media screen and (max-width: 1000px) and (max-height: 500px) {
    font-size: 1rem;
  }

  .star {
    position: absolute;
    right: 0;
    color: $accentLightColor;
    animation: ani 1s;
  }

  &:hover {
    color: $accentMediumColor;
  }

  @keyframes ani {
    0% {
      opacity: 0;
      transform: rotate(0deg)
    }
    100% {
      opacity: 1;
      font-size: 1rem;
      transform: rotate(360deg)
    }
  }

  &:active {
    background-color: $activeColor2;
    color: $secondFontColor;
    border-radius: 4px;
  }
}

.activeItem {
  color: $accentDarkColor;
}